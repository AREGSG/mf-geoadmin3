From 62114a73e2c0ce1e30f4ab6cf20b2aa3817dbf73 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:17:44 +0100
Subject: [PATCH 01/18] Fix typo in tests

---
 test/spec/ol/format/kmlformat.test.js |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/spec/ol/format/kmlformat.test.js b/test/spec/ol/format/kmlformat.test.js
index 1dd1589..c5593e1 100644
--- a/test/spec/ol/format/kmlformat.test.js
+++ b/test/spec/ol/format/kmlformat.test.js
@@ -884,7 +884,7 @@ describe('ol.format.KML', function() {
         expect(s.getFill().getColor()).to.eql([0, 0, 0, 0]);
       });
 
-      it('can read a normal styleUrls', function() {
+      it('can read normal styleUrls', function() {
         var text =
             '<kml xmlns="http://earth.google.com/kml/2.2">' +
             '  <Document>' +
-- 
1.7.10.4


From 2b268e284e3a89a5130d367b38c47962f12b29e3 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:18:02 +0100
Subject: [PATCH 02/18] Fix closing tag in tests

---
 test/spec/ol/format/kmlformat.test.js |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/spec/ol/format/kmlformat.test.js b/test/spec/ol/format/kmlformat.test.js
index c5593e1..9005547 100644
--- a/test/spec/ol/format/kmlformat.test.js
+++ b/test/spec/ol/format/kmlformat.test.js
@@ -1411,7 +1411,7 @@ describe('ol.format.KML', function() {
           '    <Folder>' +
           '     <Placemark/>' +
           '    </Folder>' +
-          '  <Document>' +
+          '  </Document>' +
           '</kml>';
       expect(format.readName(kml)).to.be(undefined);
     });
-- 
1.7.10.4


From 591a6cd9d2384f160a66e1d02b2f6f1c48da834c Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:18:41 +0100
Subject: [PATCH 03/18] Add ol.xml.load

---
 src/ol/xml.js |    9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/ol/xml.js b/src/ol/xml.js
index e491d16..908b2e9 100644
--- a/src/ol/xml.js
+++ b/src/ol/xml.js
@@ -49,6 +49,15 @@ ol.xml.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {
 
 
 /**
+ * @param {string} xml XML.
+ * @return {Document} Document.
+ */
+ol.xml.load = function(xml) {
+  return new DOMParser().parseFromString(xml, 'application/xml');
+};
+
+
+/**
  * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}
  *     valueReader Value reader.
  * @param {T=} opt_this The object to use as `this` in `valueReader`.
-- 
1.7.10.4


From 6f665c12803087f6ee1903cad6f15ccf3b0ea746 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:19:54 +0100
Subject: [PATCH 04/18] Use ol.xml.load in ol.format.XML

---
 src/ol/format/xmlformat.js |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/ol/format/xmlformat.js b/src/ol/format/xmlformat.js
index 0025cbd..7b77dcd 100644
--- a/src/ol/format/xmlformat.js
+++ b/src/ol/format/xmlformat.js
@@ -3,9 +3,9 @@ goog.provide('ol.format.XML');
 goog.require('goog.array');
 goog.require('goog.asserts');
 goog.require('goog.dom.NodeType');
-goog.require('goog.dom.xml');
 goog.require('ol.format.Format');
 goog.require('ol.format.FormatType');
+goog.require('ol.xml');
 
 
 
@@ -36,7 +36,7 @@ ol.format.XML.prototype.readFeature = function(source) {
   } else if (source instanceof Node) {
     return this.readFeatureFromNode(source);
   } else if (goog.isString(source)) {
-    var doc = goog.dom.xml.loadXml(source);
+    var doc = ol.xml.load(source);
     return this.readFeatureFromDocument(doc);
   } else {
     goog.asserts.fail();
@@ -75,7 +75,7 @@ ol.format.XML.prototype.readFeatures = function(source) {
   } else if (source instanceof Node) {
     return this.readFeaturesFromNode(source);
   } else if (goog.isString(source)) {
-    var doc = goog.dom.xml.loadXml(source);
+    var doc = ol.xml.load(source);
     return this.readFeaturesFromDocument(doc);
   } else {
     goog.asserts.fail();
@@ -119,7 +119,7 @@ ol.format.XML.prototype.readGeometry = function(source) {
   } else if (source instanceof Node) {
     return this.readGeometryFromNode(source);
   } else if (goog.isString(source)) {
-    var doc = goog.dom.xml.loadXml(source);
+    var doc = ol.xml.load(source);
     return this.readGeometryFromDocument(doc);
   } else {
     goog.asserts.fail();
@@ -153,7 +153,7 @@ ol.format.XML.prototype.readProjection = function(source) {
   } else if (source instanceof Node) {
     return this.readProjectionFromNode(source);
   } else if (goog.isString(source)) {
-    var doc = goog.dom.xml.loadXml(source);
+    var doc = ol.xml.load(source);
     return this.readProjectionFromDocument(doc);
   } else {
     goog.asserts.fail();
-- 
1.7.10.4


From 34e75e2653e9e5f7551dd0a76fc8a2b7df00087f Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:20:15 +0100
Subject: [PATCH 05/18] Use ol.xml.load in ol.format.KML

---
 src/ol/format/kmlformat.js |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/ol/format/kmlformat.js b/src/ol/format/kmlformat.js
index aaa0510..bfcfb82 100644
--- a/src/ol/format/kmlformat.js
+++ b/src/ol/format/kmlformat.js
@@ -11,7 +11,6 @@ goog.require('goog.Uri');
 goog.require('goog.array');
 goog.require('goog.asserts');
 goog.require('goog.dom.NodeType');
-goog.require('goog.dom.xml');
 goog.require('goog.math');
 goog.require('goog.object');
 goog.require('goog.string');
@@ -1581,7 +1580,7 @@ ol.format.KML.prototype.readName = function(source) {
   } else if (source instanceof Node) {
     return this.readNameFromNode(source);
   } else if (goog.isString(source)) {
-    var doc = goog.dom.xml.loadXml(source);
+    var doc = ol.xml.load(source);
     return this.readNameFromDocument(doc);
   } else {
     goog.asserts.fail();
-- 
1.7.10.4


From b63d0083f213858f19c1c1f05af5bcafc886a80e Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:20:30 +0100
Subject: [PATCH 06/18] Use ol.xml.load in ol.source.VectorFile

---
 src/ol/source/vectorfilesource.js |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/ol/source/vectorfilesource.js b/src/ol/source/vectorfilesource.js
index 5030aa0..fcb1965 100644
--- a/src/ol/source/vectorfilesource.js
+++ b/src/ol/source/vectorfilesource.js
@@ -3,12 +3,12 @@
 goog.provide('ol.source.VectorFile');
 
 goog.require('goog.asserts');
-goog.require('goog.dom.xml');
 goog.require('goog.net.XhrIo');
 goog.require('ol.format.FormatType');
 goog.require('ol.proj');
 goog.require('ol.source.State');
 goog.require('ol.source.Vector');
+goog.require('ol.xml');
 
 
 
@@ -96,7 +96,7 @@ ol.source.VectorFile.prototype.handleXhrIo_ = function(event) {
     } else if (type == ol.format.FormatType.XML) {
       source = xhrIo.getResponseXml();
       if (goog.isNull(source)) {
-        source = goog.dom.xml.loadXml(xhrIo.getResponseText());
+        source = ol.xml.load(xhrIo.getResponseText());
       }
     } else {
       goog.asserts.fail();
-- 
1.7.10.4


From a5bb4632e5ea0170040b560f8648e2688da3f1c8 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:39:28 +0100
Subject: [PATCH 07/18] Add ol.xml.isDocument

---
 src/ol/xml.js |   29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/src/ol/xml.js b/src/ol/xml.js
index 908b2e9..6621186 100644
--- a/src/ol/xml.js
+++ b/src/ol/xml.js
@@ -4,6 +4,7 @@ goog.require('goog.array');
 goog.require('goog.asserts');
 goog.require('goog.dom.NodeType');
 goog.require('goog.object');
+goog.require('goog.userAgent');
 
 
 /**
@@ -49,6 +50,34 @@ ol.xml.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {
 
 
 /**
+ * @param {?} value Value.
+ * @private
+ * @return {boolean} Is document.
+ */
+ol.xml.isDocument_ = function(value) {
+  return value instanceof Document;
+};
+
+
+/**
+ * @param {?} value Value.
+ * @private
+ * @return {boolean} Is document.
+ */
+ol.xml.isDocumentIE_ = function(value) {
+  return goog.isObject(value) && value.nodeType == goog.dom.NodeType.DOCUMENT;
+};
+
+
+/**
+ * @param {?} value Value.
+ * @return {boolean} Is document.
+ */
+ol.xml.isDocument = goog.userAgent.IE ?
+    ol.xml.isDocumentIE_ : ol.xml.isDocument_;
+
+
+/**
  * @param {string} xml XML.
  * @return {Document} Document.
  */
-- 
1.7.10.4


From 99aa9f207d766dba8e7388c753699276ba7956fd Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:40:56 +0100
Subject: [PATCH 08/18] Use ol.xml.isDocument in ol.format.XML

---
 src/ol/format/xmlformat.js |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/ol/format/xmlformat.js b/src/ol/format/xmlformat.js
index 7b77dcd..ab92f2b 100644
--- a/src/ol/format/xmlformat.js
+++ b/src/ol/format/xmlformat.js
@@ -31,8 +31,8 @@ ol.format.XML.prototype.getType = function() {
  * @inheritDoc
  */
 ol.format.XML.prototype.readFeature = function(source) {
-  if (source instanceof Document) {
-    return this.readFeatureFromDocument(source);
+  if (ol.xml.isDocument(source)) {
+    return this.readFeatureFromDocument(/** @type {Document} */ (source));
   } else if (source instanceof Node) {
     return this.readFeatureFromNode(source);
   } else if (goog.isString(source)) {
@@ -70,8 +70,8 @@ ol.format.XML.prototype.readFeatureFromNode = goog.abstractMethod;
  * @inheritDoc
  */
 ol.format.XML.prototype.readFeatures = function(source) {
-  if (source instanceof Document) {
-    return this.readFeaturesFromDocument(source);
+  if (ol.xml.isDocument(source)) {
+    return this.readFeaturesFromDocument(/** @type {Document} */ (source));
   } else if (source instanceof Node) {
     return this.readFeaturesFromNode(source);
   } else if (goog.isString(source)) {
@@ -114,8 +114,8 @@ ol.format.XML.prototype.readFeaturesFromNode = goog.abstractMethod;
  * @inheritDoc
  */
 ol.format.XML.prototype.readGeometry = function(source) {
-  if (source instanceof Document) {
-    return this.readGeometryFromDocument(source);
+  if (ol.xml.isDocument(source)) {
+    return this.readGeometryFromDocument(/** @type {Document} */ (source));
   } else if (source instanceof Node) {
     return this.readGeometryFromNode(source);
   } else if (goog.isString(source)) {
@@ -148,8 +148,8 @@ ol.format.XML.prototype.readGeometryFromNode = goog.abstractMethod;
  * @inheritDoc
  */
 ol.format.XML.prototype.readProjection = function(source) {
-  if (source instanceof Document) {
-    return this.readProjectionFromDocument(source);
+  if (ol.xml.isDocument(source)) {
+    return this.readProjectionFromDocument(/** @type {Document} */ (source));
   } else if (source instanceof Node) {
     return this.readProjectionFromNode(source);
   } else if (goog.isString(source)) {
-- 
1.7.10.4


From cd7df928913501ba5b6028b10cff5ff4e5d760cc Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:41:23 +0100
Subject: [PATCH 09/18] Use ol.xml.isDocument in ol.format.KML

---
 src/ol/format/kmlformat.js |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/ol/format/kmlformat.js b/src/ol/format/kmlformat.js
index bfcfb82..0525cae 100644
--- a/src/ol/format/kmlformat.js
+++ b/src/ol/format/kmlformat.js
@@ -1575,8 +1575,8 @@ ol.format.KML.prototype.readFeaturesFromNode = function(node) {
  * @todo stability experimental
  */
 ol.format.KML.prototype.readName = function(source) {
-  if (source instanceof Document) {
-    return this.readNameFromDocument(source);
+  if (ol.xml.isDocument(source)) {
+    return this.readNameFromDocument(/** @type {Document} */ (source));
   } else if (source instanceof Node) {
     return this.readNameFromNode(source);
   } else if (goog.isString(source)) {
-- 
1.7.10.4


From d2b7ab697f7abf6caa511cff2424f5fe1c7b498f Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:42:38 +0100
Subject: [PATCH 10/18] Add ol.xml.isNode

---
 src/ol/xml.js |   27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/src/ol/xml.js b/src/ol/xml.js
index 6621186..a2ea64f 100644
--- a/src/ol/xml.js
+++ b/src/ol/xml.js
@@ -78,6 +78,33 @@ ol.xml.isDocument = goog.userAgent.IE ?
 
 
 /**
+ * @param {?} value Value.
+ * @private
+ * @return {boolean} Is node.
+ */
+ol.xml.isNode_ = function(value) {
+  return value instanceof Node;
+};
+
+
+/**
+ * @param {?} value Value.
+ * @private
+ * @return {boolean} Is node.
+ */
+ol.xml.isNodeIE_ = function(value) {
+  return goog.isObject(value) && goog.isDef(value.nodeType);
+};
+
+
+/**
+ * @param {?} value Value.
+ * @return {boolean} Is node.
+ */
+ol.xml.isNode = goog.userAgent.IE ? ol.xml.isNodeIE_ : ol.xml.isNode_;
+
+
+/**
  * @param {string} xml XML.
  * @return {Document} Document.
  */
-- 
1.7.10.4


From f22495871c83bbe480e096a2d6663bb9bbbe546b Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:43:10 +0100
Subject: [PATCH 11/18] Use ol.xml.isNode in ol.format.XML

---
 src/ol/format/xmlformat.js |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/ol/format/xmlformat.js b/src/ol/format/xmlformat.js
index ab92f2b..7e0dc19 100644
--- a/src/ol/format/xmlformat.js
+++ b/src/ol/format/xmlformat.js
@@ -33,8 +33,8 @@ ol.format.XML.prototype.getType = function() {
 ol.format.XML.prototype.readFeature = function(source) {
   if (ol.xml.isDocument(source)) {
     return this.readFeatureFromDocument(/** @type {Document} */ (source));
-  } else if (source instanceof Node) {
-    return this.readFeatureFromNode(source);
+  } else if (ol.xml.isNode(source)) {
+    return this.readFeatureFromNode(/** @type {Node} */ (source));
   } else if (goog.isString(source)) {
     var doc = ol.xml.load(source);
     return this.readFeatureFromDocument(doc);
@@ -72,8 +72,8 @@ ol.format.XML.prototype.readFeatureFromNode = goog.abstractMethod;
 ol.format.XML.prototype.readFeatures = function(source) {
   if (ol.xml.isDocument(source)) {
     return this.readFeaturesFromDocument(/** @type {Document} */ (source));
-  } else if (source instanceof Node) {
-    return this.readFeaturesFromNode(source);
+  } else if (ol.xml.isNode(source)) {
+    return this.readFeaturesFromNode(/** @type {Node} */ (source));
   } else if (goog.isString(source)) {
     var doc = ol.xml.load(source);
     return this.readFeaturesFromDocument(doc);
@@ -116,8 +116,8 @@ ol.format.XML.prototype.readFeaturesFromNode = goog.abstractMethod;
 ol.format.XML.prototype.readGeometry = function(source) {
   if (ol.xml.isDocument(source)) {
     return this.readGeometryFromDocument(/** @type {Document} */ (source));
-  } else if (source instanceof Node) {
-    return this.readGeometryFromNode(source);
+  } else if (ol.xml.isNode(source)) {
+    return this.readGeometryFromNode(/** @type {Node} */ (source));
   } else if (goog.isString(source)) {
     var doc = ol.xml.load(source);
     return this.readGeometryFromDocument(doc);
@@ -150,8 +150,8 @@ ol.format.XML.prototype.readGeometryFromNode = goog.abstractMethod;
 ol.format.XML.prototype.readProjection = function(source) {
   if (ol.xml.isDocument(source)) {
     return this.readProjectionFromDocument(/** @type {Document} */ (source));
-  } else if (source instanceof Node) {
-    return this.readProjectionFromNode(source);
+  } else if (ol.xml.isNode(source)) {
+    return this.readProjectionFromNode(/** @type {Node} */ (source));
   } else if (goog.isString(source)) {
     var doc = ol.xml.load(source);
     return this.readProjectionFromDocument(doc);
-- 
1.7.10.4


From cd1355a6999b0b7c5f1dbf9544865727a4dd9caa Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 15:43:39 +0100
Subject: [PATCH 12/18] Use ol.xml.isNode in ol.format.KML

---
 src/ol/format/kmlformat.js |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/ol/format/kmlformat.js b/src/ol/format/kmlformat.js
index 0525cae..69a879e 100644
--- a/src/ol/format/kmlformat.js
+++ b/src/ol/format/kmlformat.js
@@ -1577,8 +1577,8 @@ ol.format.KML.prototype.readFeaturesFromNode = function(node) {
 ol.format.KML.prototype.readName = function(source) {
   if (ol.xml.isDocument(source)) {
     return this.readNameFromDocument(/** @type {Document} */ (source));
-  } else if (source instanceof Node) {
-    return this.readNameFromNode(source);
+  } else if (ol.xml.isNode(source)) {
+    return this.readNameFromNode(/** @type {Node} */ (source));
   } else if (goog.isString(source)) {
     var doc = ol.xml.load(source);
     return this.readNameFromDocument(doc);
-- 
1.7.10.4


From 17fba61bf25348b1fe3e6417ae4f7dc1d1defb82 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 16:15:21 +0100
Subject: [PATCH 13/18] Cope with undefined baseURI in ol.format.KML

---
 src/ol/format/kmlformat.js |   42 ++++++++++++++++++++++++++----------------
 1 file changed, 26 insertions(+), 16 deletions(-)

diff --git a/src/ol/format/kmlformat.js b/src/ol/format/kmlformat.js
index 69a879e..62c3124 100644
--- a/src/ol/format/kmlformat.js
+++ b/src/ol/format/kmlformat.js
@@ -371,10 +371,10 @@ ol.format.KML.readFlatCoordinates_ = function(node) {
  */
 ol.format.KML.readStyleUrl_ = function(node) {
   var s = goog.string.trim(ol.xml.getAllTextContent(node, false));
-  if (goog.isNull(node.baseURI)) {
-    return s;
-  } else {
+  if (goog.isDefAndNotNull(node.baseURI)) {
     return goog.Uri.resolve(node.baseURI, s).toString();
+  } else {
+    return s;
   }
 
 };
@@ -387,10 +387,10 @@ ol.format.KML.readStyleUrl_ = function(node) {
  */
 ol.format.KML.readURI_ = function(node) {
   var s = ol.xml.getAllTextContent(node, false);
-  if (goog.isNull(node.baseURI)) {
-    return goog.string.trim(s);
-  } else {
+  if (goog.isDefAndNotNull(node.baseURI)) {
     return goog.Uri.resolve(node.baseURI, goog.string.trim(s)).toString();
+  } else {
+    return goog.string.trim(s);
   }
 };
 
@@ -1465,8 +1465,13 @@ ol.format.KML.prototype.readSharedStyle_ = function(node, objectStack) {
   if (!goog.isNull(id)) {
     var style = ol.format.KML.readStyle_(node, objectStack);
     if (goog.isDef(style)) {
-      var baseURI = goog.isNull(node.baseURI) ? '' : node.baseURI;
-      this.sharedStyles_[baseURI + '#' + id] = [style];
+      var styleUri;
+      if (goog.isDefAndNotNull(node.baseURI)) {
+        styleUri = goog.Uri.resolve(node.baseURI, '#' + id).toString();
+      } else {
+        styleUri = '#' + id;
+      }
+      this.sharedStyles_[styleUri] = [style];
     }
   }
 };
@@ -1487,23 +1492,28 @@ ol.format.KML.prototype.readSharedStyleMap_ = function(node, objectStack) {
     if (!goog.isDef(styleObject)) {
       return;
     }
-    var baseURI = goog.isNull(node.baseURI) ? '' : node.baseURI;
     var style = /** @type {ol.style.Style} */
         (goog.object.get(styleObject, 'style', null));
+    var styleUri;
+    if (goog.isDefAndNotNull(node.baseURI)) {
+      styleUri = goog.Uri.resolve(node.baseURI, '#' + id).toString();
+    } else {
+      styleUri = '#' + id;
+    }
     if (!goog.isNull(style)) {
-      this.sharedStyles_[baseURI + '#' + id] = [style];
+      this.sharedStyles_[styleUri] = [style];
     }
     var styleUrl = /** @type {string|undefined} */
         (goog.object.get(styleObject, 'styleUrl'));
     if (goog.isDef(styleUrl)) {
-      var styleUri;
-      if (goog.isNull(node.baseURI)) {
-        styleUri = '#' + goog.string.trim(styleUrl);
+      var styleUrlUri;
+      if (goog.isDefAndNotNull(node.baseURI)) {
+        styleUrlUri = goog.Uri.resolve(node.baseURI, styleUrl).toString();
       } else {
-        styleUri = goog.Uri.resolve(baseURI, styleUrl).toString();
+        styleUrlUri = '#' + goog.string.trim(styleUrl).replace(/^#/, '');
       }
-      goog.asserts.assert(styleUri in this.sharedStyles_);
-      this.sharedStyles_[baseURI + '#' + id] = this.sharedStyles_[styleUri];
+      goog.asserts.assert(styleUrlUri in this.sharedStyles_);
+      this.sharedStyles_[styleUri] = this.sharedStyles_[styleUrlUri];
     }
   }
 };
-- 
1.7.10.4


From 60fe8efca18b0d32524f4cab3704aa170af18216 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 17:17:13 +0100
Subject: [PATCH 14/18] Add ol.xml.getLocalName

---
 src/ol/xml.js |   34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/src/ol/xml.js b/src/ol/xml.js
index a2ea64f..c21e526 100644
--- a/src/ol/xml.js
+++ b/src/ol/xml.js
@@ -50,6 +50,40 @@ ol.xml.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {
 
 
 /**
+ * @param {Node} node Node.
+ * @private
+ * @return {string} Local name.
+ */
+ol.xml.getLocalName_ = function(node) {
+  return node.localName;
+};
+
+
+/**
+ * @param {Node} node Node.
+ * @private
+ * @return {string} Local name.
+ */
+ol.xml.getLocalNameIE_ = function(node) {
+  var localName = node.localName;
+  if (goog.isDef(localName)) {
+    return localName;
+  }
+  var baseName = node.baseName;
+  goog.asserts.assert(goog.isDefAndNotNull(baseName));
+  return baseName;
+};
+
+
+/**
+ * @param {Node} node Node.
+ * @return {string} Local name.
+ */
+ol.xml.getLocalName = goog.userAgent.IE ?
+    ol.xml.getLocalNameIE_ : ol.xml.getLocalName_;
+
+
+/**
  * @param {?} value Value.
  * @private
  * @return {boolean} Is document.
-- 
1.7.10.4


From 91e9b82fe1f0b46e04cdabf2f7153e8cd4b0256d Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 17:17:47 +0100
Subject: [PATCH 15/18] Use ol.xml.getLocalName in ol.format.KML

---
 src/ol/format/kmlformat.js |   20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/src/ol/format/kmlformat.js b/src/ol/format/kmlformat.js
index 62c3124..d27033a 100644
--- a/src/ol/format/kmlformat.js
+++ b/src/ol/format/kmlformat.js
@@ -1395,8 +1395,8 @@ ol.format.KML.prototype.getExtensions = function() {
  */
 ol.format.KML.prototype.readDocumentOrFolder_ = function(node, objectStack) {
   goog.asserts.assert(node.nodeType == goog.dom.NodeType.ELEMENT);
-  goog.asserts.assert(node.localName == 'Document' ||
-                      node.localName == 'Folder');
+  var localName = ol.xml.getLocalName(node);
+  goog.asserts.assert(localName == 'Document' || localName == 'Folder');
   // FIXME use scope somehow
   var parsersNS = ol.xml.makeParsersNS(
       ol.format.KML.NAMESPACE_URIS_, {
@@ -1548,21 +1548,22 @@ ol.format.KML.prototype.readFeaturesFromNode = function(node) {
     return [];
   }
   var features;
-  if (node.localName == 'Document' || node.localName == 'Folder') {
+  var localName = ol.xml.getLocalName(node);
+  if (localName == 'Document' || localName == 'Folder') {
     features = this.readDocumentOrFolder_(node, []);
     if (goog.isDef(features)) {
       return features;
     } else {
       return [];
     }
-  } else if (node.localName == 'Placemark') {
+  } else if (localName == 'Placemark') {
     var feature = this.readPlacemark_(node, []);
     if (goog.isDef(feature)) {
       return [feature];
     } else {
       return [];
     }
-  } else if (node.localName == 'kml') {
+  } else if (localName == 'kml') {
     features = [];
     var n;
     for (n = node.firstElementChild; !goog.isNull(n);
@@ -1631,12 +1632,13 @@ ol.format.KML.prototype.readNameFromNode = function(node) {
     }
   }
   for (n = node.firstElementChild; !goog.isNull(n); n = n.nextElementSibling) {
+    var localName = ol.xml.getLocalName(n);
     if (goog.array.indexOf(ol.format.KML.NAMESPACE_URIS_,
                            n.namespaceURI) != -1 &&
-        (n.localName == 'Document' ||
-         n.localName == 'Folder' ||
-         n.localName == 'Placemark' ||
-         n.localName == 'kml')) {
+        (localName == 'Document' ||
+         localName == 'Folder' ||
+         localName == 'Placemark' ||
+         localName == 'kml')) {
       var name = this.readNameFromNode(n);
       if (goog.isDef(name)) {
         return name;
-- 
1.7.10.4


From 7940a2fc64e9e5fea772549cb4e1cbe8fed58467 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 17:29:17 +0100
Subject: [PATCH 16/18] Don't use problematic afterLoadXml function

---
 test/spec/ol/format/kmlformat.test.js |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/spec/ol/format/kmlformat.test.js b/test/spec/ol/format/kmlformat.test.js
index 9005547..af3e113 100644
--- a/test/spec/ol/format/kmlformat.test.js
+++ b/test/spec/ol/format/kmlformat.test.js
@@ -1365,7 +1365,7 @@ describe('ol.format.KML', function() {
 
     var features;
     before(function(done) {
-      afterLoadXml('spec/ol/format/kml/states.kml', function(xml) {
+      afterLoadText('spec/ol/format/kml/states.kml', function(xml) {
         try {
           features = format.readFeatures(xml);
         } catch (e) {
-- 
1.7.10.4


From a769bba65e41d79b1dcd8ae22ac4efad71565246 Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 17:30:49 +0100
Subject: [PATCH 17/18] Don't use getResponseXml() on IE

---
 src/ol/source/vectorfilesource.js |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/ol/source/vectorfilesource.js b/src/ol/source/vectorfilesource.js
index fcb1965..1e09c6b 100644
--- a/src/ol/source/vectorfilesource.js
+++ b/src/ol/source/vectorfilesource.js
@@ -4,6 +4,7 @@ goog.provide('ol.source.VectorFile');
 
 goog.require('goog.asserts');
 goog.require('goog.net.XhrIo');
+goog.require('goog.userAgent');
 goog.require('ol.format.FormatType');
 goog.require('ol.proj');
 goog.require('ol.source.State');
@@ -94,8 +95,10 @@ ol.source.VectorFile.prototype.handleXhrIo_ = function(event) {
     } else if (type == ol.format.FormatType.TEXT) {
       source = xhrIo.getResponseText();
     } else if (type == ol.format.FormatType.XML) {
-      source = xhrIo.getResponseXml();
-      if (goog.isNull(source)) {
+      if (!goog.userAgent.IE) {
+        source = xhrIo.getResponseXml();
+      }
+      if (!goog.isDefAndNotNull(source)) {
         source = ol.xml.load(xhrIo.getResponseText());
       }
     } else {
-- 
1.7.10.4


From 184118082e89b87411ef7aaa0686f296221ed07f Mon Sep 17 00:00:00 2001
From: Tom Payne <twpayne@gmail.com>
Date: Tue, 4 Feb 2014 17:33:20 +0100
Subject: [PATCH 18/18] Add FIXME to remove afterLoadXml

---
 test/test-extensions.js |    2 ++
 1 file changed, 2 insertions(+)

diff --git a/test/test-extensions.js b/test/test-extensions.js
index 1aad4c8..156f307 100644
--- a/test/test-extensions.js
+++ b/test/test-extensions.js
@@ -1,3 +1,5 @@
+// FIXME remove afterLoadXml as it uses the wrong XML parser on IE9
+
 // helper functions for async testing
 (function(global) {
 
-- 
1.7.10.4

